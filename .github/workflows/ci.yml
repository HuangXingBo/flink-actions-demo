# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, releases/** ]

env:
  VERSION: 1.11-SNAPSHOT

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '1.8' ]
    name: Build Flink - JDK - ${{ matrix.java }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/com
        key: ${{ matrix.java }}-maven-com-${{ hashFiles('**/pom.xml') }}
        restore-keys:
          ${{ matrix.java }}-maven-com-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/org
        key: ${{ matrix.java }}-maven-org-${{ hashFiles('**/pom.xml') }}
        restore-keys:
          ${{ matrix.java }}-maven-org-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/net
        key: ${{ matrix.java }}-maven-net-${{ hashFiles('**/pom.xml') }}
        restore-keys:
          ${{ matrix.java }}-maven-net-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/io
        key: ${{ matrix.java }}-maven-io-${{ hashFiles('**/pom.xml') }}
        restore-keys:
          ${{ matrix.java }}-maven-io-
    - name: Build with Maven
      run: |
        export MAVEN_OPTS="-Xmx2g -XX:ReservedCodeCacheSize=1g"
        export MAVEN_CLI_OPTS="--no-transfer-progress"
        mkdir -p ~/.m2
        mvn $MAVEN_CLI_OPTS clean install -Dmaven.javadoc.skip=true -DskipTests -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN
        rm -rf ~/.m2/repository/org/apache/flink
    - name: Locate reusult
      run: |
        pwd
        ls -al
        ls flink-dist
        ls flink-dist/target
        ls flink-dist/target/flink-$VERSION-bin
        ls flink-dist/target/flink-$VERSION-bin/flink-$VERSION
    - uses: actions/upload-artifact@v1
      with:
        name: maven-result
        path: build-target

  build-python:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.5, 3.6, 3.7]
    name: Build Python - Python${{ matrix.os }}/${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: maven-result
        path: flink-dist/target/flink-${{ env.VERSION }}-bin/flink-${{ env.VERSION }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        cd flink-python
        python -m pip install --upgrade pip
        pip install setuptools wheel twine==1.12.0
        pip install cython==0.28.1
        pip install "avro-python3>=1.8.1,<=1.9.1"
        pip install apache-beam==2.19.0
    - name: build bdist wheel
      run: |
        ls flink-dist/target/flink-$VERSION-bin/flink-$VERSION
        cd flink-python
        python setup.py bdist_wheel
    - id: getwheelname
      name: get wheel name
      run: |
        ls flink-python/dist/*.whl
        echo "::set-output name=file::$(ls flink-python/dist/*.whl)"
        echo ${{ steps.getwheelname.outputs.file }}
    - uses: actions/upload-artifact@v1
      with:
        path: ${{ steps.getwheelname.outputs.file }}